// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/luist1228/go-htmx-examples/util"

func ThemeChange() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_ThemeChange_f4dd`,
		Function: `function __templ_ThemeChange_f4dd(){const currentTheme=window.localStorage.getItem("theme")
	console.log(currentTheme)
	const currentCheckSVG= document.getElementById("svg-"+currentTheme)

	currentCheckSVG.classList.remove('invisible')
	currentCheckSVG.classList.add('visible')

	const origSetItem = window.localStorage.setItem;

	window.localStorage.setItem = function setItem(key, value) {
		// Retrieve old value before we store the new one
		let oldValue = window.localStorage.getItem(key);
		// Store in LocalStorage
		const result = origSetItem.apply(this, arguments);

		// Manually fire a "storage" event so this window is alerted. On its own, 
		// localStorage.setItem() only fires a "storage" event for other tabs.
		const e = new StorageEvent('storage', {
			storageArea: window.localStorage,
			key,
			oldValue,
			newValue: value,
			url: window.location.href,
		});
		window.dispatchEvent(e);

		return result;
	}

	window.addEventListener("storage", (e)=>{
		if(e.key==="theme"){
			const oldTheme= e.oldValue
			const newTheme= e.newValue
			const oldCheckSVG= document.getElementById("svg-"+oldTheme)
			const newCheckSVG= document.getElementById("svg-"+newTheme)

			oldCheckSVG.classList.remove('visible')
			oldCheckSVG.classList.add('invisible')

			newCheckSVG.classList.remove('invisible')
			newCheckSVG.classList.add('visible')
		}
	}, false)


}`,
		Call:       templ.SafeScript(`__templ_ThemeChange_f4dd`),
		CallInline: templ.SafeScriptInline(`__templ_ThemeChange_f4dd`),
	}
}

func ThemeDropdown() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div title=\"Change Theme\" class=\"dropdown dropdown-end\"><div tabindex=\"0\" class=\"btn normal-case btn-ghost\"><svg width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"h-5 w-5 stroke-current \"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01\"></path></svg> <span class=\"hidden font-normal md:inline\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs("Theme")
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/themes.templ`, Line: 77, Col: 55}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</span> <svg width=\"12px\" height=\"12px\" class=\"hidden h-2 w-2 fill-current opacity-60 sm:inline-block\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\"><path d=\"M1799 349l242 241-1017 1017L7 590l242-241 775 775 775-775z\"></path></svg></div><div class=\"\n      dropdown-content \n      bg-base-200 \n      text-base-content \n      rounded-box \n      h-[40vh] \n      max-h-96 \n      w-56 \n      overflow-y-auto \n      shadow \n      \"><div class=\"grid grid-cols-1 gap-3 p-3\" tabindex=\"0\" id=\"theme-list\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, theme := range util.Themes {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<button data-set-theme=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(theme.Value))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" data-key=\"theme\" class=\"outline-base-content overflow-hidden rounded-lg text-left \"><div data-theme=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(theme.Value))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"bg-base-100 text-base-content w-full cursor-pointer font-sans\"><div class=\"grid grid-cols-5 grid-rows-3\"><div class=\"col-span-5 row-span-3 row-start-1 flex items-center gap-2 px-4 py-3\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor \" class=\"invisible\" id=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString("svg-" + theme.Name))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><path d=\"M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z\"></path></svg><div class=\"flex-grow text-sm\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(theme.Name)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/themes.templ`, Line: 129, Col: 52}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><div class=\"flex h-full flex-shrink-0 flex-wrap gap-1\"><div class=\"visible bg-primary w-2 rounded\"></div><div class=\"bg-secondary w-2 rounded\"></div><div class=\"bg-accent w-2 rounded\"></div><div class=\"bg-neutral w-2 rounded\"></div></div></div></div></div></button>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ThemeChange().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
